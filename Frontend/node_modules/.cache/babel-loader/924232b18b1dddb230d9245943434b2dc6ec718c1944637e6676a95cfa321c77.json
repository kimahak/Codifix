{"ast":null,"code":"// Setting / Unsetting timeouts for every keystroke was a significant overhead\n// Inspired from https://github.com/iostreamer-X/timeout-latch\n\nexport class TimeoutLatch {\n  constructor(callback, timeoutMS) {\n    this.timeLeftMS = void 0;\n    this.timeoutMS = void 0;\n    this.isCancelled = false;\n    this.isTimeExhausted = false;\n    this.callbacks = [];\n    this.timeLeftMS = timeoutMS;\n    this.timeoutMS = timeoutMS;\n    this.callbacks.push(callback);\n  }\n  tick() {\n    if (!this.isCancelled && !this.isTimeExhausted) {\n      this.timeLeftMS--;\n      if (this.timeLeftMS <= 0) {\n        this.isTimeExhausted = true;\n        var callbacks = this.callbacks.slice();\n        this.callbacks.length = 0;\n        callbacks.forEach(callback => {\n          try {\n            callback();\n          } catch (error) {\n            console.error('TimeoutLatch callback error:', error);\n          }\n        });\n      }\n    }\n  }\n  cancel() {\n    this.isCancelled = true;\n    this.callbacks.length = 0;\n  }\n  reset() {\n    this.timeLeftMS = this.timeoutMS;\n    this.isCancelled = false;\n    this.isTimeExhausted = false;\n  }\n  get isDone() {\n    return this.isCancelled || this.isTimeExhausted;\n  }\n}\nclass Scheduler {\n  constructor() {\n    this.interval = null;\n    this.latches = new Set();\n  }\n  add(latch) {\n    this.latches.add(latch);\n    this.start();\n  }\n  remove(latch) {\n    this.latches.delete(latch);\n    if (this.latches.size === 0) {\n      this.stop();\n    }\n  }\n  start() {\n    if (this.interval === null) {\n      this.interval = setInterval(() => {\n        this.latches.forEach(latch => {\n          latch.tick();\n          if (latch.isDone) {\n            this.remove(latch);\n          }\n        });\n      }, 1);\n    }\n  }\n  stop() {\n    if (this.interval !== null) {\n      clearInterval(this.interval);\n      this.interval = null;\n    }\n  }\n}\nvar globalScheduler = null;\nexport var getScheduler = () => {\n  if (typeof window === 'undefined') {\n    return new Scheduler();\n  }\n  if (!globalScheduler) {\n    globalScheduler = new Scheduler();\n  }\n  return globalScheduler;\n};","map":{"version":3,"names":["TimeoutLatch","constructor","callback","timeoutMS","timeLeftMS","isCancelled","isTimeExhausted","callbacks","push","tick","slice","length","forEach","error","console","cancel","reset","isDone","Scheduler","interval","latches","Set","add","latch","start","remove","delete","size","stop","setInterval","clearInterval","globalScheduler","getScheduler","window"],"sources":["C:/Users/Noufel/Documents/Codifix/frontend/node_modules/@uiw/react-codemirror/esm/timeoutLatch.js"],"sourcesContent":["// Setting / Unsetting timeouts for every keystroke was a significant overhead\n// Inspired from https://github.com/iostreamer-X/timeout-latch\n\nexport class TimeoutLatch {\n  constructor(callback, timeoutMS) {\n    this.timeLeftMS = void 0;\n    this.timeoutMS = void 0;\n    this.isCancelled = false;\n    this.isTimeExhausted = false;\n    this.callbacks = [];\n    this.timeLeftMS = timeoutMS;\n    this.timeoutMS = timeoutMS;\n    this.callbacks.push(callback);\n  }\n  tick() {\n    if (!this.isCancelled && !this.isTimeExhausted) {\n      this.timeLeftMS--;\n      if (this.timeLeftMS <= 0) {\n        this.isTimeExhausted = true;\n        var callbacks = this.callbacks.slice();\n        this.callbacks.length = 0;\n        callbacks.forEach(callback => {\n          try {\n            callback();\n          } catch (error) {\n            console.error('TimeoutLatch callback error:', error);\n          }\n        });\n      }\n    }\n  }\n  cancel() {\n    this.isCancelled = true;\n    this.callbacks.length = 0;\n  }\n  reset() {\n    this.timeLeftMS = this.timeoutMS;\n    this.isCancelled = false;\n    this.isTimeExhausted = false;\n  }\n  get isDone() {\n    return this.isCancelled || this.isTimeExhausted;\n  }\n}\nclass Scheduler {\n  constructor() {\n    this.interval = null;\n    this.latches = new Set();\n  }\n  add(latch) {\n    this.latches.add(latch);\n    this.start();\n  }\n  remove(latch) {\n    this.latches.delete(latch);\n    if (this.latches.size === 0) {\n      this.stop();\n    }\n  }\n  start() {\n    if (this.interval === null) {\n      this.interval = setInterval(() => {\n        this.latches.forEach(latch => {\n          latch.tick();\n          if (latch.isDone) {\n            this.remove(latch);\n          }\n        });\n      }, 1);\n    }\n  }\n  stop() {\n    if (this.interval !== null) {\n      clearInterval(this.interval);\n      this.interval = null;\n    }\n  }\n}\nvar globalScheduler = null;\nexport var getScheduler = () => {\n  if (typeof window === 'undefined') {\n    return new Scheduler();\n  }\n  if (!globalScheduler) {\n    globalScheduler = new Scheduler();\n  }\n  return globalScheduler;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}