{"ast":null,"code":"import { useEffect, useLayoutEffect, useState } from 'react';\nimport { Annotation, EditorState, StateEffect } from '@codemirror/state';\nimport { EditorView } from '@codemirror/view';\nimport { getDefaultExtensions } from \"./getDefaultExtensions.js\";\nimport { getStatistics } from \"./utils.js\";\nimport { TimeoutLatch, getScheduler } from \"./timeoutLatch.js\";\nexport var ExternalChange = Annotation.define();\nvar TYPING_TIMOUT = 200; // ms\n\nvar emptyExtensions = [];\nexport function useCodeMirror(props) {\n  var {\n    value,\n    selection,\n    onChange,\n    onStatistics,\n    onCreateEditor,\n    onUpdate,\n    extensions = emptyExtensions,\n    autoFocus,\n    theme = 'light',\n    height = null,\n    minHeight = null,\n    maxHeight = null,\n    width = null,\n    minWidth = null,\n    maxWidth = null,\n    placeholder: placeholderStr = '',\n    editable = true,\n    readOnly = false,\n    indentWithTab: defaultIndentWithTab = true,\n    basicSetup: defaultBasicSetup = true,\n    root,\n    initialState\n  } = props;\n  var [container, setContainer] = useState();\n  var [view, setView] = useState();\n  var [state, setState] = useState();\n  var typingLatch = useState(() => ({\n    current: null\n  }))[0];\n  var pendingUpdate = useState(() => ({\n    current: null\n  }))[0];\n  var defaultThemeOption = EditorView.theme({\n    '&': {\n      height,\n      minHeight,\n      maxHeight,\n      width,\n      minWidth,\n      maxWidth\n    },\n    '& .cm-scroller': {\n      height: '100% !important'\n    }\n  });\n  var updateListener = EditorView.updateListener.of(vu => {\n    if (vu.docChanged && typeof onChange === 'function' &&\n    // Fix echoing of the remote changes:\n    // If transaction is market as remote we don't have to call `onChange` handler again\n    !vu.transactions.some(tr => tr.annotation(ExternalChange))) {\n      if (typingLatch.current) {\n        typingLatch.current.reset();\n      } else {\n        typingLatch.current = new TimeoutLatch(() => {\n          if (pendingUpdate.current) {\n            var forceUpdate = pendingUpdate.current;\n            pendingUpdate.current = null;\n            forceUpdate();\n          }\n          typingLatch.current = null;\n        }, TYPING_TIMOUT);\n        getScheduler().add(typingLatch.current);\n      }\n      var doc = vu.state.doc;\n      var _value = doc.toString();\n      onChange(_value, vu);\n    }\n    onStatistics && onStatistics(getStatistics(vu));\n  });\n  var defaultExtensions = getDefaultExtensions({\n    theme,\n    editable,\n    readOnly,\n    placeholder: placeholderStr,\n    indentWithTab: defaultIndentWithTab,\n    basicSetup: defaultBasicSetup\n  });\n  var getExtensions = [updateListener, defaultThemeOption, ...defaultExtensions];\n  if (onUpdate && typeof onUpdate === 'function') {\n    getExtensions.push(EditorView.updateListener.of(onUpdate));\n  }\n  getExtensions = getExtensions.concat(extensions);\n  useLayoutEffect(() => {\n    if (container && !state) {\n      var config = {\n        doc: value,\n        selection,\n        extensions: getExtensions\n      };\n      var stateCurrent = initialState ? EditorState.fromJSON(initialState.json, config, initialState.fields) : EditorState.create(config);\n      setState(stateCurrent);\n      if (!view) {\n        var viewCurrent = new EditorView({\n          state: stateCurrent,\n          parent: container,\n          root\n        });\n        setView(viewCurrent);\n        onCreateEditor && onCreateEditor(viewCurrent, stateCurrent);\n      }\n    }\n    return () => {\n      if (view) {\n        setState(undefined);\n        setView(undefined);\n      }\n    };\n  }, [container, state]);\n  useEffect(() => {\n    if (props.container) {\n      setContainer(props.container);\n    }\n  }, [props.container]);\n  useEffect(() => () => {\n    if (view) {\n      view.destroy();\n      setView(undefined);\n    }\n    if (typingLatch.current) {\n      typingLatch.current.cancel();\n      typingLatch.current = null;\n    }\n  }, [view]);\n  useEffect(() => {\n    if (autoFocus && view) {\n      view.focus();\n    }\n  }, [autoFocus, view]);\n  useEffect(() => {\n    if (view) {\n      view.dispatch({\n        effects: StateEffect.reconfigure.of(getExtensions)\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [theme, extensions, height, minHeight, maxHeight, width, minWidth, maxWidth, placeholderStr, editable, readOnly, defaultIndentWithTab, defaultBasicSetup, onChange, onUpdate]);\n  useEffect(() => {\n    if (value === undefined) {\n      return;\n    }\n    var currentValue = view ? view.state.doc.toString() : '';\n    if (view && value !== currentValue) {\n      var isTyping = typingLatch.current && !typingLatch.current.isDone;\n      var forceUpdate = () => {\n        if (view && value !== view.state.doc.toString()) {\n          view.dispatch({\n            changes: {\n              from: 0,\n              to: view.state.doc.toString().length,\n              insert: value || ''\n            },\n            annotations: [ExternalChange.of(true)]\n          });\n        }\n      };\n      if (!isTyping) {\n        forceUpdate();\n      } else {\n        pendingUpdate.current = forceUpdate;\n      }\n    }\n  }, [value, view]);\n  return {\n    state,\n    setState,\n    view,\n    setView,\n    container,\n    setContainer\n  };\n}","map":{"version":3,"names":["useEffect","useLayoutEffect","useState","Annotation","EditorState","StateEffect","EditorView","getDefaultExtensions","getStatistics","TimeoutLatch","getScheduler","ExternalChange","define","TYPING_TIMOUT","emptyExtensions","useCodeMirror","props","value","selection","onChange","onStatistics","onCreateEditor","onUpdate","extensions","autoFocus","theme","height","minHeight","maxHeight","width","minWidth","maxWidth","placeholder","placeholderStr","editable","readOnly","indentWithTab","defaultIndentWithTab","basicSetup","defaultBasicSetup","root","initialState","container","setContainer","view","setView","state","setState","typingLatch","current","pendingUpdate","defaultThemeOption","updateListener","of","vu","docChanged","transactions","some","tr","annotation","reset","forceUpdate","add","doc","_value","toString","defaultExtensions","getExtensions","push","concat","config","stateCurrent","fromJSON","json","fields","create","viewCurrent","parent","undefined","destroy","cancel","focus","dispatch","effects","reconfigure","currentValue","isTyping","isDone","changes","from","to","length","insert","annotations"],"sources":["C:/Users/Noufel/Documents/Codifix/frontend/node_modules/@uiw/react-codemirror/esm/useCodeMirror.js"],"sourcesContent":["import { useEffect, useLayoutEffect, useState } from 'react';\nimport { Annotation, EditorState, StateEffect } from '@codemirror/state';\nimport { EditorView } from '@codemirror/view';\nimport { getDefaultExtensions } from \"./getDefaultExtensions.js\";\nimport { getStatistics } from \"./utils.js\";\nimport { TimeoutLatch, getScheduler } from \"./timeoutLatch.js\";\nexport var ExternalChange = Annotation.define();\nvar TYPING_TIMOUT = 200; // ms\n\nvar emptyExtensions = [];\nexport function useCodeMirror(props) {\n  var {\n    value,\n    selection,\n    onChange,\n    onStatistics,\n    onCreateEditor,\n    onUpdate,\n    extensions = emptyExtensions,\n    autoFocus,\n    theme = 'light',\n    height = null,\n    minHeight = null,\n    maxHeight = null,\n    width = null,\n    minWidth = null,\n    maxWidth = null,\n    placeholder: placeholderStr = '',\n    editable = true,\n    readOnly = false,\n    indentWithTab: defaultIndentWithTab = true,\n    basicSetup: defaultBasicSetup = true,\n    root,\n    initialState\n  } = props;\n  var [container, setContainer] = useState();\n  var [view, setView] = useState();\n  var [state, setState] = useState();\n  var typingLatch = useState(() => ({\n    current: null\n  }))[0];\n  var pendingUpdate = useState(() => ({\n    current: null\n  }))[0];\n  var defaultThemeOption = EditorView.theme({\n    '&': {\n      height,\n      minHeight,\n      maxHeight,\n      width,\n      minWidth,\n      maxWidth\n    },\n    '& .cm-scroller': {\n      height: '100% !important'\n    }\n  });\n  var updateListener = EditorView.updateListener.of(vu => {\n    if (vu.docChanged && typeof onChange === 'function' &&\n    // Fix echoing of the remote changes:\n    // If transaction is market as remote we don't have to call `onChange` handler again\n    !vu.transactions.some(tr => tr.annotation(ExternalChange))) {\n      if (typingLatch.current) {\n        typingLatch.current.reset();\n      } else {\n        typingLatch.current = new TimeoutLatch(() => {\n          if (pendingUpdate.current) {\n            var forceUpdate = pendingUpdate.current;\n            pendingUpdate.current = null;\n            forceUpdate();\n          }\n          typingLatch.current = null;\n        }, TYPING_TIMOUT);\n        getScheduler().add(typingLatch.current);\n      }\n      var doc = vu.state.doc;\n      var _value = doc.toString();\n      onChange(_value, vu);\n    }\n    onStatistics && onStatistics(getStatistics(vu));\n  });\n  var defaultExtensions = getDefaultExtensions({\n    theme,\n    editable,\n    readOnly,\n    placeholder: placeholderStr,\n    indentWithTab: defaultIndentWithTab,\n    basicSetup: defaultBasicSetup\n  });\n  var getExtensions = [updateListener, defaultThemeOption, ...defaultExtensions];\n  if (onUpdate && typeof onUpdate === 'function') {\n    getExtensions.push(EditorView.updateListener.of(onUpdate));\n  }\n  getExtensions = getExtensions.concat(extensions);\n  useLayoutEffect(() => {\n    if (container && !state) {\n      var config = {\n        doc: value,\n        selection,\n        extensions: getExtensions\n      };\n      var stateCurrent = initialState ? EditorState.fromJSON(initialState.json, config, initialState.fields) : EditorState.create(config);\n      setState(stateCurrent);\n      if (!view) {\n        var viewCurrent = new EditorView({\n          state: stateCurrent,\n          parent: container,\n          root\n        });\n        setView(viewCurrent);\n        onCreateEditor && onCreateEditor(viewCurrent, stateCurrent);\n      }\n    }\n    return () => {\n      if (view) {\n        setState(undefined);\n        setView(undefined);\n      }\n    };\n  }, [container, state]);\n  useEffect(() => {\n    if (props.container) {\n      setContainer(props.container);\n    }\n  }, [props.container]);\n  useEffect(() => () => {\n    if (view) {\n      view.destroy();\n      setView(undefined);\n    }\n    if (typingLatch.current) {\n      typingLatch.current.cancel();\n      typingLatch.current = null;\n    }\n  }, [view]);\n  useEffect(() => {\n    if (autoFocus && view) {\n      view.focus();\n    }\n  }, [autoFocus, view]);\n  useEffect(() => {\n    if (view) {\n      view.dispatch({\n        effects: StateEffect.reconfigure.of(getExtensions)\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [theme, extensions, height, minHeight, maxHeight, width, minWidth, maxWidth, placeholderStr, editable, readOnly, defaultIndentWithTab, defaultBasicSetup, onChange, onUpdate]);\n  useEffect(() => {\n    if (value === undefined) {\n      return;\n    }\n    var currentValue = view ? view.state.doc.toString() : '';\n    if (view && value !== currentValue) {\n      var isTyping = typingLatch.current && !typingLatch.current.isDone;\n      var forceUpdate = () => {\n        if (view && value !== view.state.doc.toString()) {\n          view.dispatch({\n            changes: {\n              from: 0,\n              to: view.state.doc.toString().length,\n              insert: value || ''\n            },\n            annotations: [ExternalChange.of(true)]\n          });\n        }\n      };\n      if (!isTyping) {\n        forceUpdate();\n      } else {\n        pendingUpdate.current = forceUpdate;\n      }\n    }\n  }, [value, view]);\n  return {\n    state,\n    setState,\n    view,\n    setView,\n    container,\n    setContainer\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}